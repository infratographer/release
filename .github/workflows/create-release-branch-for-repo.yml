name: Create Release Branch
run-name: Create release ${{ inputs.version }} branch for ${{ inputs.org }}/${{ inputs.repo }}

on:
  workflow_call:
    inputs:
      org:
        default: infratographer
        type: string
      repo:
        required: true
        type: string
      source_branch:
        default: main
        type: string
      version:
        required: true
        type: string
    secrets:
      releasebot_token:
        required: true

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Create release branch for ${{ inputs.repo }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.releasebot_token }}
          script: |
            let sourceBranch = 'heads/${{ inputs.source_branch }}'
            let releaseBranch = 'heads/releases/${{ inputs.version }}'

            async function getBranchSHA(branch) {
              try {
                const resp = await github.rest.git.getRef({
                  owner: '${{ inputs.org }}',
                  repo: '${{ inputs.repo }}',
                  ref: branch,
                })
                return resp.data.object.sha
              } catch (error) {
                return ''
              }
            }
            if (await getBranchSHA(releaseBranch) != '') {
              console.log("Release branch already exists, skipping creation")
              return
            }
            const sourceSHA = await getBranchSHA(sourceBranch)
            if (sourceSHA == '') {
              throw new Error('Failed to find SHA for source branch')
              return
            }
            github.rest.git.createRef({
              owner: '${{ inputs.org }}',
              repo: '${{ inputs.repo }}',
              ref: `refs/${ releaseBranch }`,
              sha: sourceSHA,
            })
